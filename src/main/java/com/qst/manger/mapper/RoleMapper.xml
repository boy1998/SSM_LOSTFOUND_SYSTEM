<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qst.manger.mapper.RoleMapper">
	<cache type="com.qst.common.redis.RedisCache"/>

	<resultMap id="BaseResultMap" type="com.qst.manger.pojo.Role">
		<id column="roleid" jdbcType="INTEGER" property="roleid" />
		<result column="rolename" jdbcType="VARCHAR"
			property="rolename" />
		<result column="roledesc" jdbcType="VARCHAR"
			property="roledesc" />
		<result column="available" jdbcType="INTEGER"
			property="available" />
	</resultMap>
	<sql id="Base_Column_List">
		roleid, rolename, roledesc, available
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_role
		where roleid = #{roleid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from tb_role
		where roleid =
		#{roleid,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.qst.manger.pojo.Role">
		insert into tb_role (roleid,
		rolename, roledesc,
		available)
		values (#{roleid,jdbcType=INTEGER},
		#{rolename,jdbcType=VARCHAR},
		#{roledesc,jdbcType=VARCHAR},
		#{available,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective"
		parameterType="com.qst.manger.pojo.Role">
		insert into tb_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				roleid,
			</if>
			<if test="rolename != null">
				rolename,
			</if>
			<if test="roledesc != null">
				roledesc,
			</if>
			<if test="available != null">
				available,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="roleid != null">
				#{roleid,jdbcType=INTEGER},
			</if>
			<if test="rolename != null">
				#{rolename,jdbcType=VARCHAR},
			</if>
			<if test="roledesc != null">
				#{roledesc,jdbcType=VARCHAR},
			</if>
			<if test="available != null">
				#{available,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.qst.manger.pojo.Role">
		update tb_role
		<set>
			<if test="rolename != null">
				rolename = #{rolename},
			</if>
			<if test="roledesc != null">
				roledesc = #{roledesc},
			</if>
			<if test="available != null">
				available = #{available},
			</if>
		</set>
		where roleid = #{roleid}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.qst.manger.pojo.Role">
		update tb_role
		set rolename =
		#{rolename,jdbcType=VARCHAR},
		roledesc = #{roledesc,jdbcType=VARCHAR},
		available = #{available,jdbcType=INTEGER}
		where roleid =
		#{roleid,jdbcType=INTEGER}
	</update>

	<!-- 查询角色 -->
	<select id="queryAllRole" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from tb_role
		where  1=1
			<if test="rolename!=null and rolename!=''">
				and rolename like concat('%',#{rolename},'%')
			</if>
			<if test="roledesc!=null and roledesc!=''">
				and roledesc like concat('%',#{roledesc},'%')
			</if>
			<if test="available!=null">
				and available =#{available}
			</if>
      order by roleid desc
	</select>
	<!-- 根据角色id删除tb_role_menu里面的数据 deleteRolMenuByRid -->
	<delete id="deleteRolMenuByRid">
		delete from tb_role_menu where rid=#{value}
	</delete>
	<!-- 根据角色id删除tb_role_user里面的数据 deleteRoleUserByRid -->
	<delete id="deleteRoleUserByRid">
		delete from tb_role_users where rid=#{value}
	</delete>
	<!-- 保存角色和菜单之间的关系 -->
	<insert id="insertRoleMenu">
		insert into tb_role_menu(rid,mid)
		values(#{rid},#{mid})
	</insert>

	<!-- 根据用户id删除tb_role_user里面的数据 -->
	<delete id="deleteRoleUserByUid">
		delete from tb_role_users where uid=#{uid}
	</delete>

	<!--&lt;!&ndash; 根据用户id查询角色列表 &ndash;&gt;-->
	<!--<select id="queryRoleByUid" resultMap="BaseResultMap">-->
		<!--select t1.* from tb_role-->
		<!--t1 inner join tb_role_user t2 on(t1.roleid=t2.rid) where t2.uid=#{uid}-->
		<!--and t1.available=#{available}-->
	<!--</select>-->

	<!--根据用户ID查询角色-->
	<select id="queryRoleByUid" resultMap="BaseResultMap">
		select t2.* from tb_role_users t1 inner join tb_role t2 on t1.rid=t2.roleid
		where  available =#{available}
		and uid = #{uid}
	</select>
</mapper>